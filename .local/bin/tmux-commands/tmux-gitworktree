#!/usr/bin/env bash

git status >& /dev/null 
[[ $? -ne 0 ]] && echo 'Not a git repository' && exit 1

fzf_args="--border=rounded --margin=2,4,2,4 --layout=reverse"

actions=(Move Add Remove Leave)
action=$(for i in ${actions[@]}
do
	echo $i
done | fzf --prompt='What do you want to do>' ${fzf_args})

if [ "$action" = "Move" ]; then
	while read -r line; do
		worktree_list+=($(echo $line | awk '{print($3)}' | tr -d '[]'))
	done <<< "$(git worktree list)" 

	worktree=$(for i in ${worktree_list[@]}
	do
		echo $i
	done | fzf --prompt='Worktree>' ${fzf_args})

  if [ -z $worktree ]; then
      exit 1
  fi

	tmux new-window -n $worktree -c "$(pwd)/../$worktree"
	~/.local/bin/tmux-commands/tmux-ide "$(pwd)/../$worktree"
fi

if [ "$action" = "Add" ]; then
	branch_list=('New')
	while read -r line; do
		if [ "$line" != "* $(git branch --show-current)" ]; then
		  if [[ $line != \+* ]]; then
				branch_list+=("$(echo $line)")
			fi
		fi
	done <<< "`git branch`"

	worktree=$(for i in ${branch_list[@]}
	do
		echo $i
	done | fzf --prompt='Branch>' ${fzf_args})

	if [ -z $worktree ]; then
		exit 1
	fi
	if [ $worktree = "New" ]; then
		worktree=''
		read -p "Provide new worktree name: " worktree
		if [ -z $worktree ]; then
			echo "You must give me a name"
			exit 1
		fi
		git worktree add -b $worktree ../$worktree
	else
		git worktree add ../$worktree $worktree 
	fi

	tmux new-window -n $worktree -c "$(pwd)/../$worktree"
	~/.local/bin/tmux-commands/tmux-ide "$(pwd)/../$worktree"
fi

if [ "$action" = "Remove" ]; then
	while read -r line; do
		worktree_list+=($(echo $line | awk '{print($1)}'))
	done <<< "$(git worktree list)" 

	worktree_path=$(for i in ${worktree_list[@]}
	do
		echo $i
	done | fzf --prompt='Worktree to remove>' ${fzf_args})

  if [ -z $worktree_path ]; then
      exit 1
  fi

	worktree_branch=""
	while read -r line; do
		if [[ $line == $worktree_path* ]]; then
			worktree_branch=`echo $line | awk '{print($3)}' | tr -d '[]'`
		fi
	done <<< "$(git worktree list)" 

	git worktree remove $worktree_branch
	if [[ $(tmux list-windows) = *$worktree_branch* ]]; then
		tmux kill-window -t $worktree_branch
	fi
fi

