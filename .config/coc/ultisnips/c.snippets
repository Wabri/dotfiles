# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet main "Default main definition" b
#include <stdlib.h>

int main(int argc, char *argv[]) {
  exit(EXIT_SUCCESS);
}

endsnippet

snippet fork "Create a default fork controller" b
if  (fork() == 0) {
    // son
} else {
    // father
    signal(SIGCHLD, func); 
}
endsnippet


snippet readFile "Create a default read of file" b
FILE *pfFile = fopen(fileToRead, "r");
char sRead[howManyCharacters];

while (1) {
	int charRead = fread(charArry, elementLength, howManyCharacters, fromFile);
	if (i < howManyCharacters) {
	// No elements remain on file
	    break;
	} else {
	// work with charrArray
	}
}

fclose(pfFile);
endsnippet
